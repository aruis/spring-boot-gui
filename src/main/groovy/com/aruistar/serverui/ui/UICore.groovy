package com.aruistar.serverui.ui

import com.aruistar.serverui.Application
import com.aruistar.serverui.Server
import com.aruistar.serverui.Tool
import com.intellij.uiDesigner.core.GridConstraints
import com.intellij.uiDesigner.core.GridLayoutManager
import com.intellij.uiDesigner.core.Spacer
import org.springframework.boot.SpringApplication
import org.springframework.context.ApplicationContext

import javax.swing.*
import java.awt.*
import java.awt.event.ActionEvent
import java.awt.event.ActionListener

/**
 * Created by liurui on 15/12/4.
 */
public class UICore extends JFrame {
    private JPanel panel1;
    private JButton saveButton;
    private JButton startButton;
    private JButton stopButton;
    private JTextField portTextField;
    private JCheckBox isLogCheckBox;
    private JLabel infoLabel;

    private ApplicationContext appContext;
    def config
    def save

    public UICore() throws HeadlessException {
        super("软件应用配置");
        setContentPane(panel1);
        setSize(440, 280);
        //pack();
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setResizable(false);
        setLocationRelativeTo(null);
        setVisible(true);


        stopButton.enabled = false
        saveButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                def port = portTextField.text.toString().trim();
                if (port != "" && port.matches(/[\d]+/) && Integer.parseInt(port) <= 65536) {
                    if (Tool.isPortAvailable(Integer.parseInt(port))) {
                        config.server.port = port;
                    } else {
                        alert('端口无效或已被占用,请更换.')
                        return;
                    }
                } else {
                    alert('端口由纯数字组成,建议选择范围1024至65536.')
                    return;
                }

                config.isLog = isLogCheckBox.selected;
                if (config.isLog) {
                    config.logging.path = Application.getProjectPath() + '/log';
                } else {
                    config.logging.path = null;
                }
                save()
                alert('保存成功.')

            }
        });
        startButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
//        System.setProperty("spring.resources.static-locations", Application.getProjectPath()+"/static/");
                System.setProperty('spring.config.location', Application.getProjectPath() + '/application.yml')
                //String[] args = ['--spring.config.location=' + Application.getProjectPath() + '/application.yml'].toArray();
                new Thread({ ->
                    isLogCheckBox.enabled = startButton.enabled = stopButton.enabled = portTextField.enabled = saveButton.enabled = false;
                    infoLabel.text = '启动中...'
                    try {
                        appContext = SpringApplication.run(Server.class)
                        infoLabel.text = '已启动'
                        isLogCheckBox.enabled = startButton.enabled = stopButton.enabled = portTextField.enabled = saveButton.enabled = false;
                        stopButton.enabled = true;
                    } catch (ex) {
                        ex.printStackTrace()
                        infoLabel.text = '启动失败'
                        isLogCheckBox.enabled = startButton.enabled = stopButton.enabled = portTextField.enabled = saveButton.enabled = true;
                        stopButton.enabled = false;
                    }


                }).start();
            }
        });
        stopButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (appContext != null) {
                    SpringApplication.exit(appContext);
                    infoLabel.text = ''
                    appContext = null;
                    isLogCheckBox.enabled = startButton.enabled = stopButton.enabled = portTextField.enabled = saveButton.enabled = true;
                    stopButton.enabled = false;
                }
            }
        });
    }


    def setPort(Object o) {
        portTextField.text = o.toString();
    }

    public void alert(String text) {
        JOptionPane.showMessageDialog(this, text);
    }

    def setIsLog(boolean b) {
        isLogCheckBox.selected = b;
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */

    /**
     * @noinspection ALL
     */
    {
        // GUI initializer generated by IntelliJ IDEA GUI Designer
        // >>> IMPORTANT!! <<<
        // DO NOT EDIT OR ADD ANY CODE HERE! $$$setupUI$$$()
        ;
    } /** Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     *
     DO NOT edit this method OR call it in your code!
     * @noinspection ALL
     */

    /** @noinspection ALL */
    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE! $$$setupUI$$$( ) ;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */

    /**
     * @noinspection ALL
     */
    {
        // GUI initializer generated by IntelliJ IDEA GUI Designer
        // >>> IMPORTANT!! <<<
        // DO NOT EDIT OR ADD ANY CODE HERE! $$$setupUI$$$()
        ;
    } /** Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     *
     DO NOT edit this method OR call it in your code!
     * @noinspection ALL
     */

    /** @noinspection ALL */
    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE! $$$setupUI$$$( ) ;
    } /** Method generated by IntelliJ IDEA GUI Designer
     *  >>> IMPORTANT!! <<<
     *  DO NOT edit this method OR call it in your code!
     * @noinspection ALL
     */

    /** @noinspection
     ALL
     */
    {
        // GUI initializer generated by IntelliJ IDEA GUI Designer
        // >>> IMPORTANT!! <<<
        // DO NOT EDIT OR ADD ANY CODE HERE! $$$setupUI$$$()
        ;
    } /** Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     *
     DO NOT edit this method OR call it in your code!
     * @noinspection ALL
     */

    /** @noinspection ALL */
    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE! $$$setupUI$$$( ) ;
    } /** Method generated by IntelliJ IDEA GUI Designer
     *  >>> IMPORTANT!! <<<
     *  DO NOT edit this method OR call it in your code!
     * @noinspection ALL
     */

    /** @noinspection
     ALL
     */
    {
        // GUI initializer generated by IntelliJ IDEA GUI Designer
        // >>> IMPORTANT!! <<<
        // DO NOT EDIT OR ADD ANY CODE HERE! $$$setupUI$$$()
        ;
    } /** Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     *
     DO NOT edit this method OR call it in your code!
     * @noinspection ALL
     */

    /** @noinspection ALL */
    {
        // GUI initializer generated by IntelliJ IDEA GUI Designer
        // >>> IMPORTANT!! <<<
        // DO NOT EDIT OR ADD ANY CODE HERE! $$$setupUI$$$ ( ) ;
    } /** Method generated by IntelliJ IDEA GUI Designer
     *  >>> IMPORTANT!! <<<
     *  DO NOT edit this method OR call it in your code!
     * @noinspection ALL
     */

    /** @noinspection ALL */
    {
        // GUI initializer generated by IntelliJ IDEA GUI Designer
        // >>> IMPORTANT!! <<<
        // DO NOT EDIT OR ADD ANY CODE HERE! $$$setupUI$$$ ( )
        ;
    } /** Method generated by IntelliJ IDEA GUI Designer
     *  >>> IMPORTANT!! <<<
     *
     DO NOT edit this method OR call it in your code!
     * @noinspection ALL
     */

    /** @noinspection ALL */

    private void createUIComponents() {
        // TODO: place custom component creation code here
    }

    {
        // GUI initializer generated by IntelliJ IDEA GUI Designer
        // >>> IMPORTANT!! <<<
        // DO NOT EDIT OR ADD ANY CODE HERE! $$$setupUI$$$ ( )
        ;
    } /** Method generated by IntelliJ IDEA GUI Designer
     *  >>> IMPORTANT!! <<<
     *
     DO NOT edit this method OR call it in your code!
     * @noinspection ALL
     */

    /** @noinspection
     ALL
     */
    {
        // GUI initializer generated by IntelliJ IDEA GUI Designer
        // >>> IMPORTANT!! <<<
        // DO NOT EDIT OR ADD ANY CODE HERE! $$$setupUI$$$ ( )
        ;
    } /** Method generated by IntelliJ IDEA GUI Designer
     *  >>> IMPORTANT!! <<<
     *
     DO NOT edit this method OR call it in your code!
     * @noinspection ALL
     */

    /** @noinspection
     ALL
     */
    {
        // GUI initializer generated by IntelliJ IDEA GUI Designer
        // >>> IMPORTANT!! <<<
        // DO NOT EDIT OR ADD ANY CODE HERE! $$$setupUI$$$ ( )
        ;
    } /** Method generated by IntelliJ IDEA GUI Designer
     *  >>> IMPORTANT!! <<<
     *
     DO NOT edit this method OR call it in your code!
     * @noinspection ALL
     */

    /** @noinspection
     ALL
     */
    {
        // GUI initializer generated by IntelliJ IDEA GUI Designer
        // >>> IMPORTANT!! <<<
        // DO NOT EDIT OR ADD ANY CODE HERE! $$$setupUI$$$ ( )
        ;
    } /** Method generated by IntelliJ IDEA GUI Designer
     *  >>> IMPORTANT!! <<<
     *
     DO NOT edit this method OR call it in your code!
     * @noinspection ALL
     */

    /** @noinspection
     ALL
     */
    {
        // GUI initializer generated by IntelliJ IDEA GUI Designer
        // >>> IMPORTANT!! <<<
        // DO NOT EDIT OR ADD ANY CODE HERE! $$$setupUI$$$ ( )
        ;
    } /** Method generated by IntelliJ IDEA GUI Designer
     *  >>> IMPORTANT!! <<<
     *
     DO NOT edit this method OR call it in your code!
     * @noinspection ALL
     */

    /** @noinspection
     ALL
     */
    {
        // GUI initializer generated by IntelliJ IDEA GUI Designer
        // >>> IMPORTANT!! <<<
        // DO NOT EDIT OR ADD ANY CODE HERE! $$$setupUI$$$ ( )
        ;
    } /** Method generated by IntelliJ IDEA GUI Designer
     *  >>> IMPORTANT!! <<<
     *
     DO NOT edit this method OR call it in your code!
     * @noinspection ALL
     */

    /** @noinspection
     ALL
     */
    {
        // GUI initializer generated by IntelliJ IDEA GUI Designer
        // >>> IMPORTANT!! <<<
        // DO NOT EDIT OR ADD ANY CODE HERE! $$$setupUI$$$ ( )
        ;
    } /** Method generated by IntelliJ IDEA GUI Designer
     *  >>> IMPORTANT!! <<<
     *
     DO NOT edit this method OR call it in your code!
     * @noinspection ALL
     */

    /** @noinspection
     ALL
     */
    {
        // GUI initializer generated by IntelliJ IDEA GUI Designer
        // >>> IMPORTANT!! <<<
        // DO NOT EDIT OR ADD ANY CODE HERE! $$$setupUI$$$ ( )
        ;
    } /** Method generated by IntelliJ IDEA GUI Designer
     *  >>> IMPORTANT!! <<<
     *
     DO NOT edit this method OR call it in your code!
     * @noinspection ALL
     */

    /** @noinspection
     ALL
     */
    {
        // GUI initializer generated by IntelliJ IDEA GUI Designer
        // >>> IMPORTANT!! <<<
        // DO NOT EDIT OR ADD ANY CODE HERE! $$$setupUI$$$ ( )
        ;
    } /** Method generated by IntelliJ IDEA GUI Designer
     *  >>> IMPORTANT!! <<<
     *
     DO NOT edit this method OR call it in your code!
     * @noinspection ALL
     */

    /** @noinspection
     ALL
     */
    {
        // GUI initializer generated by IntelliJ IDEA GUI Designer
        // >>> IMPORTANT!! <<<
        // DO NOT EDIT OR ADD ANY CODE HERE! $$$setupUI$$$ ( )
        ;
    } /** Method generated by IntelliJ IDEA GUI Designer
     *  >>> IMPORTANT!! <<<
     *
     DO NOT edit this method OR call it in your code!
     * @noinspection ALL
     */

    /** @noinspection
     ALL
     */
    {
    // GUI initializer generated by IntelliJ IDEA GUI Designer
    // >>> IMPORTANT!! <<<
    // DO NOT EDIT OR ADD ANY CODE HERE! $$$setupUI$$$ ( )
    ;
    } /** Method generated by IntelliJ IDEA GUI Designer
    *  >>> IMPORTANT!! <<<
    *
     DO NOT edit this method OR call it in your code!
    * @noinspection ALL
    */
    private void $$$setupUI$$$ ( )
    {
    panel1 = new JPanel ( ) ;
    panel1 . setLayout ( new GridLayoutManager ( 2 , 1 , new Insets ( 0 , 0 , 0 , 0 ) , - 1 , - 1 ) ) ;
    final JPanel panel2 = new JPanel ( ) ;
    panel2 . setLayout ( new GridLayoutManager ( 4 , 2 , new Insets ( 60 , 40 , 0 , 120 ) , - 1 , - 1 ) ) ;
    panel1 . add ( panel2 , new GridConstraints ( 0 , 0 , 1 , 1 , GridConstraints . ANCHOR_CENTER , GridConstraints . FILL_BOTH , GridConstraints . SIZEPOLICY_CAN_SHRINK | GridConstraints . SIZEPOLICY_CAN_GROW , GridConstraints . SIZEPOLICY_CAN_SHRINK | GridConstraints . SIZEPOLICY_WANT_GROW , null , null , null , 0 , false ) ) ;
    final Spacer spacer1 = new Spacer ( ) ;
    panel2 . add ( spacer1 , new GridConstraints ( 0 , 1 , 1 , 1 , GridConstraints . ANCHOR_CENTER , GridConstraints . FILL_HORIZONTAL , GridConstraints . SIZEPOLICY_WANT_GROW , 1 , null , null , null , 0 , false ) ) ;
    final JLabel label1 = new JLabel ( ) ;
    label1 . setText ( "端口:" ) ;
    panel2 . add ( label1 , new GridConstraints ( 1 , 0 , 1 , 1 , GridConstraints . ANCHOR_WEST , GridConstraints . FILL_NONE , GridConstraints . SIZEPOLICY_FIXED , GridConstraints . SIZEPOLICY_FIXED , null , null , null , 0 , false ) ) ;
    final JLabel label2 = new JLabel ( ) ;
    label2 . setText ( "是否启用日志:" ) ;
    panel2 . add ( label2 , new GridConstraints ( 2 , 0 , 1 , 1 , GridConstraints . ANCHOR_WEST , GridConstraints . FILL_NONE , GridConstraints . SIZEPOLICY_FIXED , GridConstraints . SIZEPOLICY_FIXED , null , null , null , 0 , false ) ) ;
    portTextField = new JTextField ( ) ;
    panel2 . add ( portTextField , new GridConstraints ( 1 , 1 , 1 , 1 , GridConstraints . ANCHOR_WEST , GridConstraints . FILL_NONE , GridConstraints . SIZEPOLICY_CAN_GROW , GridConstraints . SIZEPOLICY_FIXED , null , new Dimension ( 180 , - 1 ) , null , 0 , false ) ) ;
    isLogCheckBox = new JCheckBox ( ) ;
    isLogCheckBox . setText ( "" ) ;
    panel2 . add ( isLogCheckBox , new GridConstraints ( 2 , 1 , 1 , 1 , GridConstraints . ANCHOR_WEST , GridConstraints . FILL_NONE , GridConstraints . SIZEPOLICY_CAN_SHRINK | GridConstraints . SIZEPOLICY_CAN_GROW , GridConstraints . SIZEPOLICY_FIXED , null , null , null , 0 , false ) ) ;
    final Spacer spacer2 = new Spacer ( ) ;
    panel2 . add ( spacer2 , new GridConstraints ( 3 , 1 , 1 , 1 , GridConstraints . ANCHOR_CENTER , GridConstraints . FILL_VERTICAL , 1 , GridConstraints . SIZEPOLICY_WANT_GROW , null , null , null , 0 , false ) ) ;
    final JPanel panel3 = new JPanel ( ) ;
    panel3 . setLayout ( new GridLayoutManager ( 1 , 5 , new Insets ( 0 , 40 , 25 , 15 ) , - 1 , - 1 ) ) ;
    panel1 . add ( panel3 , new GridConstraints ( 1 , 0 , 1 , 1 , GridConstraints . ANCHOR_CENTER , GridConstraints . FILL_BOTH , GridConstraints . SIZEPOLICY_CAN_SHRINK | GridConstraints . SIZEPOLICY_CAN_GROW , GridConstraints . SIZEPOLICY_CAN_SHRINK | GridConstraints . SIZEPOLICY_CAN_GROW , null , null , null , 0 , false ) ) ;
    final Spacer spacer3 = new Spacer ( ) ;
    panel3 . add ( spacer3 , new GridConstraints ( 0 , 1 , 1 , 1 , GridConstraints . ANCHOR_CENTER , GridConstraints . FILL_HORIZONTAL , GridConstraints . SIZEPOLICY_WANT_GROW , 1 , null , null , null , 0 , false ) ) ;
    saveButton = new JButton ( ) ;
    saveButton . setText ( "应用" ) ;
    panel3 . add ( saveButton , new GridConstraints ( 0 , 2 , 1 , 1 , GridConstraints . ANCHOR_CENTER , GridConstraints . FILL_HORIZONTAL , GridConstraints . SIZEPOLICY_CAN_SHRINK | GridConstraints . SIZEPOLICY_CAN_GROW , GridConstraints . SIZEPOLICY_FIXED , null , null , null , 1 , false ) ) ;
    startButton = new JButton ( ) ;
    startButton . setText ( "启动服务" ) ;
    panel3 . add ( startButton , new GridConstraints ( 0 , 3 , 1 , 1 , GridConstraints . ANCHOR_CENTER , GridConstraints . FILL_HORIZONTAL , GridConstraints . SIZEPOLICY_CAN_SHRINK | GridConstraints . SIZEPOLICY_CAN_GROW , GridConstraints . SIZEPOLICY_FIXED , null , null , null , 0 , false ) ) ;
    stopButton = new JButton ( ) ;
    stopButton . setText ( "关闭服务" ) ;
    panel3 . add ( stopButton , new GridConstraints ( 0 , 4 , 1 , 1 , GridConstraints . ANCHOR_CENTER , GridConstraints . FILL_HORIZONTAL , GridConstraints . SIZEPOLICY_CAN_SHRINK | GridConstraints . SIZEPOLICY_CAN_GROW , GridConstraints . SIZEPOLICY_FIXED , null , null , null , 0 , false ) ) ;
    infoLabel = new JLabel ( ) ;
    infoLabel . setText ( "" ) ;
    panel3 . add ( infoLabel , new GridConstraints ( 0 , 0 , 1 , 1 , GridConstraints . ANCHOR_WEST , GridConstraints . FILL_NONE , GridConstraints . SIZEPOLICY_FIXED , GridConstraints . SIZEPOLICY_FIXED , null , null , null , 0 , false ) ) ;
    }
    /** @noinspection ALL */ public JComponent $$$getRootComponent$$$ ( ) { return panel1 ; } }
