/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.aruistar.serverui

import org.springframework.boot.SpringApplication
import org.springframework.context.ApplicationContext

import javax.swing.*

/**
 *
 * @author liurui
 */
public class UICore extends javax.swing.JPanel {

    private ApplicationContext appContext;
    def config
    def save

    /**
     * Creates new form TestJPanel
     */
    public UICore() {
        initComponents();
        stopButton.enabled = false
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        startButton = new javax.swing.JButton();
        stopButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        infoLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        portTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        saveButton = new javax.swing.JButton();
        isLogCheckBox = new javax.swing.JCheckBox();

        startButton.setText("启动服务");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        stopButton.setText("关闭服务");
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("端口：");

        portTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                portTextFieldActionPerformed(evt);
            }
        });

        jLabel2.setText("是否启用日志：");

        saveButton.setText("应用");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 469, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(isLogCheckBox))
                        .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(62, 62, 62)
                        .addComponent(portTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap())
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(infoLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(saveButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(startButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(stopButton)
                        .addGap(16, 16, 16))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                        .addContainerGap(47, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(portTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel2))
                        .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(isLogCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(43, 43, 43)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(saveButton)
                        .addComponent(startButton)
                        .addComponent(stopButton)
                        .addComponent(infoLabel))
                        .addGap(14, 14, 14))
        );
    }// </editor-fold>

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
//        System.setProperty("spring.resources.static-locations", Application.getProjectPath()+"/static/");
        System.setProperty('spring.config.location', Application.getProjectPath() + '/application.yml')
        //String[] args = ['--spring.config.location=' + Application.getProjectPath() + '/application.yml'].toArray();
        new Thread({ ->
            isLogCheckBox.enabled = startButton.enabled = stopButton.enabled = portTextField.enabled = saveButton.enabled = false;
            infoLabel.text = '启动中...'
            try {
                appContext = SpringApplication.run(Server.class)
                infoLabel.text = '已启动'
                isLogCheckBox.enabled = startButton.enabled = stopButton.enabled = portTextField.enabled = saveButton.enabled = false;
                stopButton.enabled = true;
            } catch (e) {
                e.printStackTrace()
                infoLabel.text = '启动失败'
                isLogCheckBox.enabled = startButton.enabled = stopButton.enabled = portTextField.enabled = saveButton.enabled = true;
                stopButton.enabled = false;
            }


        }).start();
    }

    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        if (appContext != null) {
            SpringApplication.exit(appContext);
            infoLabel.text = ''
            appContext = null;
            isLogCheckBox.enabled = startButton.enabled = stopButton.enabled = portTextField.enabled = saveButton.enabled = true;
            stopButton.enabled = false;
        }
    }

    private void portTextFieldActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        def port = portTextField.text.toString().trim();
        if (port != "" && port.matches(/[\d]+/) && Integer.parseInt(port) <= 65536) {
            if (Tool.isPortAvailable(Integer.parseInt(port))) {
                config.server.port = port;
            } else {
                alert('端口无效或已被占用,请更换.')
                return;
            }
        } else {
            alert('端口由纯数字组成,建议选择范围1024至65536.')
            return;
        }

        config.isLog = isLogCheckBox.selected;
        if (config.isLog) {
            config.logging.path = Application.getProjectPath() + '/log';
        } else {
            config.logging.path = null;
        }
        save()
        alert('保存成功.')
    }

    // Variables declaration - do not modify
    private javax.swing.JLabel infoLabel;
    private javax.swing.JCheckBox isLogCheckBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField portTextField;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton startButton;
    private javax.swing.JButton stopButton;
    // End of variables declaration

    def setPort(Object o) {
        portTextField.text = o.toString();
    }

    def setLogPath(Object o) {
        logTextField.text = o.toString();
    }

    public void alert(String text) {
        JOptionPane.showMessageDialog(this, text);
    }

    def setIsLog(boolean b) {
        isLogCheckBox.selected = b;
    }
}
